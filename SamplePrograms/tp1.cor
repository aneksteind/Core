-- hello f x = f (f x);
-- id x = x;
-- main = hello hello id 3


-- Y f = let x = 2;
--          y = 0 in f x;
-- Y f = letrec x = 2 in f x;

h x = case x of
       <1> -> 2 ;
       <2> -> 2 ;;
main = 0

-- f = 3 ;

-- g x y = let z = x in z;
-- f x y = case x of
--     <1> -> case (let x = y in y + 2) of
--         <1> -> 1;;
--     <2> -> 2;;
-- x = Pack{1,2};
-- x = 1 + 2 - 3 / 5 * 6